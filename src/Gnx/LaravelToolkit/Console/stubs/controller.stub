<?php
namespace DummyNamespace;

use Illuminate\Http\Request;

use DummyAppNamespaceHttp\Requests;
use Gnx\LaravelToolkit\Controllers\AppBaseController;
use Gnx\LaravelToolkit\Utils\ResponseManager;
use Response;
use Schema;

use DummyModelNamespace\DummyModel;

class DummyClass extends AppBaseController
{

    /**
     * Get a listing of the records.
     *
     * @return Response
     */
    public function index(Request $request) {
        $query = DummyModel::query();

        $columns = Schema::getColumnListing((new DummyModel)->getTable());

        foreach($columns as $column) {
            if($request->has($column)) {
                $query->where($column, $request->get($column));
            }
        }

        $result = $query->get();

        return Response::json(ResponseManager::result($result->toArray(), "List retrieved successfully."));
    }

    /**
     * Show the form for creating a new record.
     *
     * @return Response
     */
    public function create() {
        //
    }

    /**
     * Store a newly created record in storage.
     *
     * @param Request $request
     *
     * @return Response
     */
    public function store(Request $request) {
        if(sizeof(DummyModel::$rules) > 0) {
            $this->validateRequest($request, DummyModel::$rules);
        }

        $input = $request->all();

        $record = DummyModel::create($input);

        return Response::json(ResponseManager::result($record->toArray(), "Record saved successfully."));
    }

    /**
     * Display the specified record.
     *
     * @param  int  $id
     * @param Request $request
     *
     * @return Response
     */
    public function show($id) {
        $record = DummyModel::find($id);

        if(empty($record)) {
            $this->throwRecordNotFoundException("Record not found");
        }

        return Response::json(ResponseManager::result($record->toArray(), "Record retrieved successfully."));
    }

    /**
     * Show the form for editing the specified record.
     *
     * @param  int  $id
     * @return Response
     */
    public function edit($id) {
        //
    }

    /**
     * Update the specified record in storage.
     *
     * @param  int  $id
     * @return Response
     */
    public function update($id, Request $request) {
        $record = DummyModel::find($id);

        if(empty($record)) {
            $this->throwRecordNotFoundException("Record not found");
        }

        if(sizeof(DummyModel::$rules) > 0) {
            $this->validateRequest($request, DummyModel::$rules);
        }

        $input = $request->all();

        $record->fill($input);
        $record->save();

        return Response::json(ResponseManager::result($record->toArray(), "Record updated successfully."));
    }

    /**
     * Remove the specified record from storage.
     *
     * @param  int  $id
     * @return Response
     */
    public function destroy($id) {
        $record = DummyModel::find($id);

        if(empty($record)) {
            $this->throwRecordNotFoundException("Record not found");
        }

        $record->delete();

        return Response::json(ResponseManager::result($id, "Record deleted successfully."));
    }

}